# StateMachine3DPong

A screen capture of this game running can be found at: https://www.youtube.com/watch?v=cVegpEZbewA



The states folder contains the various states that correspond to the character objects.

The character objects each inherit from the abstract BaseCharacter object so that the characters may be seemlessly managed in the CharacterManager object. Each of the character objects contain a StateMachine<CharacterType> object to manage their respective states. The character objects are made to receive messages sent between characters and as user input. The messages will be handled in characters respective states' onMessage() function.

The AIengine and PhysicsCalculator objects are instance objects that contain the functions that calculate ai-movement and collisions, respectively.

The Numbers.h and ScenicObjects.h files contain the vertex and index information for the various background objects.

The main game loop (using the VulkanRenderEngine) and character initialization are all managed in the Window object as well as creating the window and the corresponding key callback function.

Finally, the main.cpp file contains the call to the main function and runs the game via a Window object, and the stdfx files are the pre-compiled header files.
